#1	Cluster
#2 	Nodes Master
#3	Nodes
#4	N Pods (on interagit avec Kubectl pour les déployer)
#5	Container(s) (par exemple Docker)

Les Pods peuvent être "exposés" grâce à un "service"
Les Pods ont un chacun un "replica" et une adresse IP unique

Un service "is an abstraction which defines a logical set of Pods and a
policy by which to access them. Services enable a loose coupling between
dependent Pods. A Service is defined using YAML (preferred) or JSON, like
all Kubernetes objects.""

A Kubernetes Service is an abstraction which defines a logical set of Pods and
a policy by which to access them - sometimes called a micro-service. The set of
Pods targeted by a Service is (usually) determined by a Label Selector.

At its core, a Volume is just a directory, possibly with some data in it, which
is accessible to the Containers in a Pod. How that directory comes to be, the
medium that backs it, and the contents of it are determined by the particular
volume type used.

A Kubernetes Volume has an explicit lifetime - the same as the Pod that encloses
it. Consequently, a volume outlives any Containers that run within the Pod, and
data is preserved across Container restarts. When a Pod ceases to exist, the
volume will cease to exist too. Kubernetes supports many types of Volumes,
and a Pod can use any number of them simultaneously.

As Pods successfully complete, the Job tracks the successful completions. When
a specified number of successful completions is reached, the Job itself is
complete. Deleting a Job will cleanup the Pods it created

A DaemonSet ensures that all (or some) Nodes run a copy of a Pod.
As nodes are added to the cluster, Pods are added to them. As nodes are removed
from the cluster, those Pods are garbage collected.
Deleting a DaemonSet will clean up the Pods it created.

--------------------------------------------------------------------------------

# Pré-requis d'Installation

# 1) --> VirtualBox : Logiciel libre de virtualisation (Oracle)
# Installation via https://www.virtualbox.org/wiki/Downloads
# Il se peut qu'il faille autoriser VB dans Réglages->Sécurité->Général (en bas)

# 2) --> Docker - Docker Machine 	: Docker Machine est un outils permettant
# de déployer des hôtes docker sur différentes plateformes. Cela permet aussi
# de crer des hôtes pour les clusters
# https://docs.docker.com/v17.09/machine/install-machine/

# 3) --> Minikube
# Minikube is a tool that makes it easy to
# run Kubernetes locally. Minikube runs a single-node Kubernetes cluster inside
# a Virtual Machine (VM) on your laptop

# 4) --> Kubctl
# Kubectl est une interface en ligne de commande
# qui permet d’exécuter des commandes sur des clusters Kubernetes
# https://kubernetes.io/fr/docs/reference/kubectl/overview/

# 5) --> Helm
# brew install helm
# Manager de packages - Déploie des stacks
# complète : https://blog.wescale.fr/2018/05/31/introduction-a-helm/

# La déploiement sur K8S se font via des fichiers YAML ou JSON

minikube start # démare le cluster

# Prérequis

# 1) --> VirtualBox : Logiciel libre de virtualisation (Oracle)
# 2) --> Docker - Docker Machine
# 3) --> Minikube
# 4) --> Kubctl
# 5) --> Helm (à priori non nécessaire)
